/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
        ext.when   = When to run the module.
----------------------------------------------------------------------------------------
*/

// VARSCAN

process {

    withName: 'MPILEUP_NORMAL' {
        ext.when   = { params.tools && params.tools.contains('varscan') }
        ext.prefix = { "${meta.id}.normal" }
    }

    withName: 'MPILEUP_TUMOR' {
        ext.when   = { params.tools && params.tools.contains('varscan') }
        ext.prefix = { "${meta.id}.tumor" }
    }

    withName: 'VARSCAN_SOMATIC' {
        ext.args   = '--output-vcf 1'
        ext.when   = { params.tools && params.tools.contains('varscan') }
        ext.prefix = { "${meta.id}" }
    }

    withName: 'VARSCAN_PROCESS_SNV' {
        ext.when   = { params.tools && params.tools.contains('varscan') }
        ext.prefix = { "${meta.id}.varscan" }
        publishDir = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/variant_calling/varscan/${meta.id}/" },
                pattern: "*Somatic.hc.{vcf.gz,vcf.gz.tbi}"
            ]
    }

    withName: 'VARSCAN_PROCESS_INDEL' {
        ext.when   = { params.tools && params.tools.contains('varscan') }
        ext.prefix = { "${meta.id}.varscan" }
        publishDir = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/variant_calling/varscan/${meta.id}/" },
                pattern: "*Somatic.hc.{vcf.gz,vcf.gz.tbi}"
            ]
    }

    withName: 'VARSCAN_FILTER_SNV' {
        ext.args   = "--min-ref-avgrl 0 --min-var-avgrl 0"
        ext.when   = { params.tools && params.tools.contains('varscan') }
        ext.prefix = { "${meta.id}.varscan.snv" }
        publishDir = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/variant_calling/varscan/${meta.id}/" },
                pattern: "*.pass.{vcf.gz,vcf.gz.tbi}"
            ]
    }

    withName: 'VARSCAN_FILTER_INDEL' {
        ext.args   = "--min-ref-avgrl 0 --min-var-avgrl 0"
        ext.when   = { params.tools && params.tools.contains('varscan') }
        ext.prefix = { "${meta.id}.varscan.indel" }
        publishDir = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/variant_calling/varscan/${meta.id}/" },
                pattern: "*.pass.{vcf.gz,vcf.gz.tbi}"
            ]
    }

    withName: 'BAMREADCOUNT' {
        ext.when   = { params.tools && params.tools.contains('varscan') }
        ext.prefix = { "${meta.id}" }
    }

}
